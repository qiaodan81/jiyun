<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TestPlanMapper">
    
    <resultMap type="TestPlan" id="TestPlanResult">
        <result property="id"    column="id"    />
        <result property="planName"    column="plan_name"    />
        <result property="startime"    column="startime"    />
        <result property="endtime"    column="endtime"    />
        <result property="status"    column="status"    />
        <result property="gradeid"    column="gradeid"    />
        <result property="key"    column="key"    />
    </resultMap>

    <sql id="selectTestPlanVo">
        select id, plan_name, startime, endtime, status, gradeid, `key` from test_plan
    </sql>

    <select id="selectTestPlanList" parameterType="TestPlan" resultMap="TestPlanResult">
        <include refid="selectTestPlanVo"/>
        <where>  
            <if test="planName != null  and planName != ''"> and plan_name like concat('%', #{planName}, '%')</if>
            <if test="startime != null "> and startime = #{startime}</if>
            <if test="endtime != null "> and endtime = #{endtime}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="gradeid != null "> and gradeid = #{gradeid}</if>
            <if test="key != null  and key != ''"> and key = #{key}</if>
        </where>
    </select>
    
    <select id="selectTestPlanById" parameterType="Long" resultMap="TestPlanResult">
        <include refid="selectTestPlanVo"/>
        where id = #{id}
    </select>
    <!--测试计划查询-->
    <select id="selectTestPlanList2" resultType="com.ruoyi.system.dto.TestPlanDTO">
        SELECT
	tp.id AS testPlanId,
	tp.plan_name AS planName,
	tp.startime AS startime,
	tp.endtime AS endtime,
	tp.`status` AS testPlanStatus,
	sg.grade_name AS gradeName,
	st.leader_name AS leaderName,
	st.teacher_name AS teacherName,
	st.gardeid,
	sg.directionId AS directionid,
	sg.term,
	sg.population
FROM
	test_plan tp,
	school_grade sg,
	school_teacher st
WHERE
	tp.gradeid = sg.id
	AND sg.id = st.gardeid

    </select>

    <insert id="insertTestPlan" parameterType="TestPlan" useGeneratedKeys="true" keyProperty="id">
        insert into test_plan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="planName != null">plan_name,</if>
            <if test="startime != null">startime,</if>
            <if test="endtime != null">endtime,</if>
            <if test="status != null">status,</if>
            <if test="gradeid != null">gradeid,</if>
            <if test="key != null">key,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="planName != null">#{planName},</if>
            <if test="startime != null">#{startime},</if>
            <if test="endtime != null">#{endtime},</if>
            <if test="status != null">#{status},</if>
            <if test="gradeid != null">#{gradeid},</if>
            <if test="key != null">#{key},</if>
         </trim>
    </insert>

    <update id="updateTestPlan" parameterType="TestPlan">
        update test_plan
        <trim prefix="SET" suffixOverrides=",">
            <if test="planName != null">plan_name = #{planName},</if>
            <if test="startime != null">startime = #{startime},</if>
            <if test="endtime != null">endtime = #{endtime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="gradeid != null">gradeid = #{gradeid},</if>
            <if test="key != null">key = #{key},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTestPlanById" parameterType="Long">
        delete from test_plan where id = #{id}
    </delete>

    <delete id="deleteTestPlanByIds" parameterType="String">
        delete from test_plan where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SchoolStudentMapper">
    
    <resultMap type="SchoolStudent" id="SchoolStudentResult">
        <result property="id"    column="id"    />
        <result property="studentName"    column="student_name"    />
        <result property="status"    column="status"    />
        <result property="gradeid"    column="gradeid"    />
        <result property="teacherid"    column="teacherid"    />
        <result property="account"    column="account"    />
        <result property="password"    column="password"    />
    </resultMap>

    <sql id="selectSchoolStudentVo">
        select id, student_name, status, gradeid, teacherid, account, password from school_student
    </sql>

    <select id="selectSchoolStudentList" parameterType="SchoolStudent" resultMap="SchoolStudentResult">
        <include refid="selectSchoolStudentVo"/>
        <where>  
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="gradeid != null "> and gradeid = #{gradeid}</if>
            <if test="teacherid != null "> and teacherid = #{teacherid}</if>
            <if test="account != null  and account != ''"> and account = #{account}</if>
            <if test="password != null  and password != ''"> and password = #{password}</if>
        </where>
    </select>
    
    <select id="selectSchoolStudentById" parameterType="Long" resultMap="SchoolStudentResult">
        <include refid="selectSchoolStudentVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSchoolStudent" parameterType="SchoolStudent" useGeneratedKeys="true" keyProperty="id">
        insert into school_student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentName != null">student_name,</if>
            <if test="status != null">status,</if>
            <if test="gradeid != null">gradeid,</if>
            <if test="teacherid != null">teacherid,</if>
            <if test="account != null">account,</if>
            <if test="password != null">password,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentName != null">#{studentName},</if>
            <if test="status != null">#{status},</if>
            <if test="gradeid != null">#{gradeid},</if>
            <if test="teacherid != null">#{teacherid},</if>
            <if test="account != null">#{account},</if>
            <if test="password != null">#{password},</if>
         </trim>
    </insert>

    <update id="updateSchoolStudent" parameterType="SchoolStudent">
        update school_student
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentName != null">student_name = #{studentName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="gradeid != null">gradeid = #{gradeid},</if>
            <if test="teacherid != null">teacherid = #{teacherid},</if>
            <if test="account != null">account = #{account},</if>
            <if test="password != null">password = #{password},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSchoolStudentById" parameterType="Long">
        delete from school_student where id = #{id}
    </delete>

    <delete id="deleteSchoolStudentByIds" parameterType="String">
        delete from school_student where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>